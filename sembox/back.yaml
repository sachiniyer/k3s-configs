apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: sembox-back-pvc
  namespace: sembox
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: rook-ceph-block
  resources:
    requests:
      storage: 5Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sembox-back
spec:
  selector:
    matchLabels:
      app: sembox-back
  template:
    metadata:
      labels:
        app: sembox-back
    spec:
      nodeSelector:
        kubernetes.io/hostname: coffeeproject
      containers:
        - name: sembox-back
          resources:
            requests:
              memory: "1Gi"
            limits:
              memory: "5Gi"
          image: sachiyer/sembox-api:v15
          ports:
            - containerPort: 8000
          env:
            - name: DBNAME
              value: semdb
            - name: TBNAME
              value: semtb
            - name: DBUSERNAME
              value: sem
            - name: DBPASSWORD
              value:
            - name: DBHOSTNAME
              value: "sembox-db.sembox.svc.cluster.local"
            - name: DBPORT
              value: "5432"
            - name: SEARCH_THRESHOLD
              value: "0.7"
            - name: LOG_LEVEL
              value: INFO
            - name: BIND_IP
              value: "0.0.0.0"
            - name: PORT
              value: "8000"
            - name: API_URL
              value: http://localhost:8000
          volumeMounts:
            - name: sembox-back-pvc
              mountPath: /app/files
      volumes:
        - name: sembox-back-pvc
          persistentVolumeClaim:
            claimName: sembox-back-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: sembox-back
spec:
  selector:
    app: sembox-back
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8000
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: sembox-back-cert
  namespace: sembox
spec:
  commonName: sembox-api.sachiniyer.com
  secretName: sembox-back-cert
  dnsNames:
    - sembox-api.sachiniyer.com
  issuerRef:
    name: letsencrypt-prod
    kind: ClusterIssuer
---
kind: Ingress
apiVersion: networking.k8s.io/v1
metadata:
  name: sembox-back-ingress
spec:
  tls:
    - secretName: sembox-back-cert
  rules:
    - host: sembox-api.sachiniyer.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: sembox-back
                port:
                  number: 80
